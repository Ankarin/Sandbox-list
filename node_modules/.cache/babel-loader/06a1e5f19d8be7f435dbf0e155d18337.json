{"ast":null,"code":"import _toConsumableArray from \"/home/cubex/new (4)/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/cubex/new (4)/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cubex/new (4)/src/List.js\";\nimport React, { useState } from \"react\";\nimport AddNestedItem from \"./AddNestedItem\";\nimport './App.scss';\nexport default function List(_ref) {\n  var item = _ref.item,\n      index = _ref.index,\n      id = _ref.id,\n      removeItem = _ref.removeItem,\n      Up = _ref.Up,\n      Down = _ref.Down,\n      list = _ref.list;\n\n  // Toggle form for adding new list item\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nestedList = _useState4[0],\n      setNestedList = _useState4[1];\n\n  var move = function move(array, from, to) {\n    var def = array[from];\n    array[from] = array[to];\n    array[to] = def;\n    return array;\n  };\n\n  var addNestedItem = function addNestedItem(text) {\n    var currentIds = nestedList.map(function (data) {\n      return data.id;\n    });\n    var idToBeAdded = 0;\n\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    var newList = [].concat(_toConsumableArray(nestedList), [{\n      id: idToBeAdded,\n      text: text\n    }]);\n    setNestedList(newList);\n  };\n\n  var removeNestedItem = function removeNestedItem(index) {\n    var newList = _toConsumableArray(nestedList);\n\n    newList.splice(index, 1);\n    setNestedList(newList);\n  }; // Move elements in array up and down\n\n\n  var UpNested = function UpNested(id, array) {\n    var newList = _toConsumableArray(nestedList); // setList(newList)\n\n\n    setNestedList(move(newList, id, id - 1));\n  };\n\n  var DownNested = function DownNested(id, array) {\n    var newList = _toConsumableArray(nestedList); // setList(newList)\n\n\n    setNestedList(move(newList, id, id + 1));\n  }; // console.log(nestedList.map(a=>a.text))\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, item.text, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return removeItem(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Remove\"), \" \", nestedList.length == 0 ? React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setForm(!form);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Add Sublist\") : React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, form ? 'show' : 'hide', \" form\"), id !== 0 ? React.createElement(\"button\", {\n    onClick: function onClick() {\n      return Up(id, nestedList);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Up\") : null, id !== list.length - 1 ? React.createElement(\"button\", {\n    onClick: function onClick() {\n      return Down(id, nestedList);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Down\") : null, nestedList.length > 0 ? React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setNestedList([]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Remove Sublist\") : null, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, nestedList.length > 0 ? nestedList.map(function (item, index) {\n    return React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(List, {\n      item: item,\n      index: item.id,\n      id: nestedList.indexOf(item),\n      indexof: nestedList.indexOf(item),\n      removeItem: removeNestedItem,\n      Up: UpNested,\n      Down: DownNested,\n      list: nestedList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \" \");\n  }) : null, form ? React.createElement(AddNestedItem, {\n    addNestedItem: addNestedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }) : \"\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/cubex/new (4)/src/List.js"],"names":["React","useState","AddNestedItem","List","item","index","id","removeItem","Up","Down","list","form","setForm","nestedList","setNestedList","move","array","from","to","def","addNestedItem","text","currentIds","map","data","idToBeAdded","includes","newList","removeNestedItem","splice","UpNested","DownNested","length","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AddNestedItem from \"./AddNestedItem\";\nimport './App.scss'\nexport default function List({ item, index, id, removeItem, Up, Down, list }) {\n    // Toggle form for adding new list item\n  const [form, setForm] = useState(false);\n\n  const [nestedList, setNestedList] = useState([])\n\n  const move = (array, from, to,) => {\n    const def = array[from];\n    array[from] = array[to];\n    array[to] = def;\n    return array\n}\n\n\n\n  const addNestedItem = text => {\n    let currentIds = nestedList.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    const newList = [...nestedList, { id: idToBeAdded, text }];\n    setNestedList(newList);\n  };\n\n  const removeNestedItem = index => {\n    const newList = [...nestedList];\n    newList.splice(index, 1);\n    setNestedList(newList);\n  };\n\n\n\n\n  // Move elements in array up and down\nconst UpNested = (id, array) => {\n  const newList = [...nestedList]\n  // setList(newList)\n   setNestedList(move(newList, id, id-1))\n  \n}\nconst DownNested = (id, array) => {\n  const newList = [...nestedList]\n  // setList(newList)\n   setNestedList(move(newList, id, id+1))\n\n}\n\n\n\n\n// console.log(nestedList.map(a=>a.text))\nreturn (\n    <div >\n      \n        \n        {item.text}\n        <br/>\n         <button onClick={() => removeItem(id)}>Remove</button>{\" \"}\n        {nestedList.length==0 ?<button onClick={() => setForm(!form)}>Add Sublist</button>:<button>{form ? 'show':'hide'} form</button>}\n        \n        { id!==0?<button onClick={()=>Up(id, nestedList)} >Up</button>:null} \n{id!==list.length-1 ?<button onClick={()=>Down(id, nestedList)}>Down</button>:null}\n{nestedList.length >0 ?<button onClick={()=>setNestedList([])}>Remove Sublist</button>:null}\n\n\n       \n      {/* {item.nested.text} */}\n     \n<ul> \n\n{nestedList.length>0 ? nestedList.map((item, index)=> \n  <li key={item.id}>\n <List \n \n item={item} \n index={item.id} \n id={nestedList.indexOf(item)}\n indexof={nestedList.indexOf(item)}\n  removeItem={removeNestedItem} \n  Up={UpNested}\n Down={DownNested} \n   list={nestedList}/> </li>  ):null}\n\n\n{form ? <AddNestedItem  addNestedItem={addNestedItem}/> : \"\"}\n</ul>\n\n\n\n\n\n\n\n {/*nestedList.length>=0 ? nestedList.map(a=><li>{a.text}</li>):null} \n\n\n\n \n     {/* <li> <ul>{Array.isArray(item.nested) ? <List item={item.nested.map(a=>a)} index={index} id={id} removeItem={removeItem} Up={Up} Down={Down} list={list} />:null}</ul>  </li>  */}\n\n      \n      <div />\n    </div>\n  );\n  \n}\n"]},"metadata":{},"sourceType":"module"}