{"ast":null,"code":"import _toConsumableArray from \"/home/cubex/new (4)/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/cubex/new (4)/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cubex/new (4)/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.scss\";\nimport List from \"./List\";\nimport AddItem from \"./AddItem\";\n\nfunction App(props) {\n  // Data base\n  var _useState = useState([{\n    id: 0,\n    text: 'random content',\n    nested: [{\n      text: 'nested content'\n    }]\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1]; // Function to move elevemnts up and down array\n\n\n  var move = function move(array, from, to) {\n    var def = array[from];\n    array[from] = array[to];\n    array[to] = def;\n    return array;\n  };\n\n  var addItem = function addItem(text) {\n    var currentIds = list.map(function (data) {\n      return data.id;\n    });\n    var idToBeAdded = 0;\n\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    var newList = [].concat(_toConsumableArray(list), [{\n      id: idToBeAdded,\n      text: text\n    }]);\n    setList(newList);\n  };\n\n  var removeItem = function removeItem(index) {\n    var newList = _toConsumableArray(list);\n\n    newList.splice(index, 1);\n    setList(newList);\n  }; // Move elements in array up and down\n\n\n  var Up = function Up(id, array) {\n    var newList = _toConsumableArray(list); // setList(newList)\n\n\n    setList(move(newList, id, id - 1));\n  };\n\n  var Down = function Down(id, array) {\n    var newList = _toConsumableArray(list); // setList(newList)\n\n\n    setList(move(newList, id, id + 1));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, list.map(function (item, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(List, {\n      key: index,\n      index: index,\n      id: list.indexOf(item),\n      item: item,\n      removeItem: removeItem,\n      Up: Up,\n      Down: Down,\n      list: list,\n      addItem: addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(AddItem, {\n    addItem: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cubex/new (4)/src/App.js"],"names":["React","useState","List","AddItem","App","props","id","text","nested","list","setList","move","array","from","to","def","addItem","currentIds","map","data","idToBeAdded","includes","newList","removeItem","index","splice","Up","Down","item","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport List from \"./List\";\nimport AddItem from \"./AddItem\";\n\n\nfunction App(props) {\n\n  // Data base\n  const [list, setList] = useState([\n  {id:0,\n    text:'random content',\n    nested:[\n      {\n\n      text:'nested content'\n    }\n\n    ]\n\n  },\n\n\n  ]);\n\n// Function to move elevemnts up and down array\n  const move = (array, from, to,) => {\n    const def = array[from];\n    array[from] = array[to];\n    array[to] = def;\n    return array\n}\n\n\n\n  const addItem = text => {\n    let currentIds = list.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    const newList = [...list, { id: idToBeAdded, text }];\n    setList(newList);\n  };\n\n  const removeItem = index => {\n    const newList = [...list];\n    newList.splice(index, 1);\n    setList(newList);\n  };\n\n\n\n\n  // Move elements in array up and down\nconst Up = (id, array) => {\n  const newList = [...list]\n  // setList(newList)\n   setList(move(newList, id, id-1))\n  \n}\nconst Down = (id, array) => {\n  const newList = [...list]\n  // setList(newList)\n   setList(move(newList, id, id+1))\n\n}\n\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"list-item\">\n        {list.map((item, index) => (\n          <div key={index}>\n          <List\n            key={index}\n            index={index}\n            id={list.indexOf(item)}\n            item={item}\n            removeItem={removeItem}\n            Up={Up}\n            Down={Down}\n            list={list}\n            addItem={addItem}\n            \n          /> \n          {/* <AddItem addItem={addItem} nestedList={nestedList} /> */}\n          </div>\n        ))}\n        <br />\n        <AddItem addItem={addItem} />\n\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}